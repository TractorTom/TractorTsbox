% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formattage.R
\name{format_date_ts}
\alias{format_date_ts}
\title{Formatter un objet date_ts}
\usage{
format_date_ts(date_ts, frequency_ts, test = TRUE)
}
\arguments{
\item{date_ts}{un vecteur numérique, de préférence integer au format AAAA, c(AAAA, MM) ou c(AAAA, TT)}

\item{frequency_ts}{un entier qui vaut 4L (ou 4.) pour les séries trimestrielles et 12L (ou 12.) pour les séries mensuelles.}

\item{test}{un booléen (Default is TRUE)}
}
\value{
En sortie, la fonction retourne une date au format date_ts avec la période inclus entre 1 et la fréquence.
Si l'argument \code{test} est mis à FALSE, alors aucun test ne sera effectué sur les données en entrée.
}
\description{
Formatter un objet date_ts
}
\details{
Ici le formattage correspond à une réécriture de la date sans en changer la valeur. Alors que l'objet c(2020L, 12L) désigne le mois de décembre 2020 et c(2021L, 1L) le mois de janvier 2021, on peut imaginer que la date_ts c(2021L, 0L) peut aussi représenter le mois de décembre 2020.
}
\examples{

# Formattage inchangée
format_date_ts(c(2020L, 1L), frequency_ts = 4L) # 1er trimestre de 2020
format_date_ts(c(2020L, 8L), frequency_ts = 12L) # Aout 2020

# Retour dans le passé
format_date_ts(c(2020L, 0L), frequency_ts = 4L) # 4ème trimestre de 2019
format_date_ts(c(2020L, -10L), frequency_ts = 12L) # février 2019

# Avancée dans le futur
format_date_ts(c(2020L, 7L), frequency_ts = 4L) # 3ème trimestre de 2021
format_date_ts(c(2020L, 13L), frequency_ts = 4L) # janvier 2021

}
